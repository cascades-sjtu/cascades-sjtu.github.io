<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://cascades-sjtu.github.io/</id><title>Cascades</title><subtitle>A minimal, responsive, and powerful Jekyll theme for presenting professional writing.</subtitle> <updated>2022-07-16T20:25:49+08:00</updated> <author> <name>cascades</name> <uri>https://cascades-sjtu.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://cascades-sjtu.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://cascades-sjtu.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2022 cascades </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>艮寅路xxx号语言艺术培训营实录</title><link href="https://cascades-sjtu.github.io/posts/sjtu-hunan-admission-review/" rel="alternate" type="text/html" title="艮寅路xxx号语言艺术培训营实录" /><published>2022-07-04T00:00:00+08:00</published> <updated>2022-07-04T00:00:00+08:00</updated> <id>https://cascades-sjtu.github.io/posts/sjtu-hunan-admission-review/</id> <content src="https://cascades-sjtu.github.io/posts/sjtu-hunan-admission-review/" /> <author> <name>cascades</name> </author> <category term="misc" /> <summary> 很想分享一些最近的感悟，但由于博客内容的隐蔽性，我只想让我希望分享的对象看懂博客的意思，也希望这些读者们能够有所收获吧 为什么写这篇博客 作为培训营的营长之一，我从第一天开始就对我的营员们做出了展望，向他们列举了在培训营中可能的收获。从那时候开始，我就期待在培训营结束后，能够听到他们亲口说出自己在培训营中的收获与成长。我也希望能够在一个合适的场合，将我多年来参加培训营的感悟分享给大家。 由于邯郸路的某几只蝴蝶扇动了一下翅膀，今年的培训营是在匆忙中结束的。可能是由于我一直在给训练营备课，所以我没有能来得及做一个正式的总结，只是凭借临时组织的语言和大家在欢声笑语中度过了最后的一个小时。现在我想再组织一下语言，就当作给大家的告别礼了。 听众的艺术鉴赏 VS 你们的艺术鉴赏 培训营最重要的主题就是，如何吸引你的听众，影响你的听众。有经验的听众可能不会听信一个初登舞台几年的表... </summary> </entry> <entry><title>2022年开源操作系统训练营学习笔记</title><link href="https://cascades-sjtu.github.io/posts/rust-based-os-comp2022/" rel="alternate" type="text/html" title="2022年开源操作系统训练营学习笔记" /><published>2022-07-01T00:00:00+08:00</published> <updated>2022-07-16T20:25:03+08:00</updated> <id>https://cascades-sjtu.github.io/posts/rust-based-os-comp2022/</id> <content src="https://cascades-sjtu.github.io/posts/rust-based-os-comp2022/" /> <author> <name>cascades</name> </author> <category term="course" /> <category term="website" /> <summary> 之前一直就想完完整整地做一次操作系统的Lab，但值得学习的课程资料实在是太多了，经典的xv6，modern的OSTEP，包括IPADS的ChCore…不过借着清华这样一次开源操作系统训练营的机会，就从rCore开始吧，这篇博客用来记录我在训练营中的笔记 7.1 Day1 今天仔细看了本次训练营的大概内容1，主要关注workload，目前看来代码量不是特别大，每天做一点的话应该是能完成的，关键在于要多提问题并记录在issue中 在学习实践过程记录表上登记自己每日/周学习记录情况的repo网址，并在这个repo上记录每日/周学习记录情况 (成绩分数：20%) 在第一阶段学习issues上的提问和回答问题情况，在第一阶段OS学习项目 、 rCore Tutorial v3的详细实验指导内容 上的Pull Request提交情况（代码改进、文档改进、文档错误等） (成... </summary> </entry> <entry><title>2022暑期自学计划</title><link href="https://cascades-sjtu.github.io/posts/summer-self-learning-plan/" rel="alternate" type="text/html" title="2022暑期自学计划" /><published>2022-05-30T00:00:00+08:00</published> <updated>2022-07-13T15:49:25+08:00</updated> <id>https://cascades-sjtu.github.io/posts/summer-self-learning-plan/</id> <content src="https://cascades-sjtu.github.io/posts/summer-self-learning-plan/" /> <author> <name>cascades</name> </author> <category term="misc" /> <category term="self-learning" /> <summary> 勿在浮沙筑高台，想做出好的研究，提高CTF比赛的水平，还是要打好计算机基础 国外CS课程 打算从CS自学指南上选取一些计算机基础课程和安全相关的课程来进行自学。学习方式主要为看slide，写lab+project，在学习的过程中定期记录到博客。目前打算进行自学的课程列表： 名称 学校 博客 时间 CS61A UCB ./2022-05-30-summer-self-learning-plan.md 2022.05.21-2022.07.08 rCore Tsinghua ./2022-07-01-rust-based-os-comp2022.md 2022.0... </summary> </entry> <entry><title>使用Git来管理Microsoft Excel</title><link href="https://cascades-sjtu.github.io/posts/excel-version-control/" rel="alternate" type="text/html" title="使用Git来管理Microsoft Excel" /><published>2022-05-29T00:00:00+08:00</published> <updated>2022-05-30T09:26:43+08:00</updated> <id>https://cascades-sjtu.github.io/posts/excel-version-control/</id> <content src="https://cascades-sjtu.github.io/posts/excel-version-control/" /> <author> <name>cascades</name> </author> <category term="misc" /> <category term="git" /> <summary> 起因 众所周知，高校办公自动化的程度目前也仅限于使用Excel来处理各类数据，但难免遇到以下几个问题： 数据量大的时候甚至打不开Excel文件 Excel和各种国产的表格软件之间存在不兼容的问题 不方便进行版本管理，往往要在命名上花很多心思和管理的成本 只能写一些简单的公式（会vlookup的就不错了），不方便做数据处理 不方便做数据的统一备份 上述问题很难说用一种方案来解决，但我们可以选择优先解决在当前办公场景下成为工作效率瓶颈的那个问题。当遇到周期较长的工作，需要经常迭代时，版本管理和数据备份就成为了亟待解决的问题。 一个朴素的想法是通过Git来解决这两个问题。Excel主要的文件格式为xls和xslx，本质上是xml打包压缩后的文件，所以被Git当作二进制文件。Git默认只检测二进制文件的改动情况，并不会做细粒度的diff。所以最主要的目标就是找... </summary> </entry> <entry><title>二进制漏洞检测工具 cwe_checker 学习</title><link href="https://cascades-sjtu.github.io/posts/cwe-chekcer/" rel="alternate" type="text/html" title="二进制漏洞检测工具 cwe_checker 学习" /><published>2022-04-27T00:00:00+08:00</published> <updated>2022-05-21T12:26:28+08:00</updated> <id>https://cascades-sjtu.github.io/posts/cwe-chekcer/</id> <content src="https://cascades-sjtu.github.io/posts/cwe-chekcer/" /> <author> <name>cascades</name> </author> <category term="tool" /> <category term="Rust" /> <summary> cwe_checker是一个Rust编写的，利用Ghidra反汇编出的PCode，对ELF二进制文件进行程序分析的工具，目前已覆盖十余种CWE规则的检测。 安装与使用 和大多数的Github项目一样，cwe_checker提供了本地安装和Docker两种方法。同时，它也作为核心组件被集成到了FACT_core1和EMBArk2等固件分析框架中。 本地安装 安装环境为Ubuntu-22.04的WSL，参考官方命令即可，需要手动安装openjdk才能使用headless版本的Ghidra。安装过程中会在根目录写入一些json配置文件，和CWE规则有关。安装完成后直接检测即可，命令如下： sudo apt install openjdk-11-jdk make all GHIDRA_PATH=/path/to/ghidra cwe_checker /path/to/bin... </summary> </entry> </feed>
